HANDWRITING RECOGNIZER: ImgProcessor
- responsible for building ImgDecomp
- input: text only image with single font and font type
*Methods*
- ImgDecomp processImg(Mat)
-- separate chars based on contours, isolate them in their bounding boxes (see boundRect)
-- categorize chars into separate lines (see separateLines)
-- get spacing between chars and between words from first line (see spaceBetween)
-- for each line, group chars in line into words (see buildDecomp)

- List<Rect> boundRect(Mat)
-- call contours(Mat)
-- call Imgproc.boundingRect()
- List<MatOfPoint> contours(Mat)
-- call Imgproc.threshold()
-- call Mat.convertTo(Mat, 8UC1)
-- call Imgproc.findContours()

- Map<Range,List<Rect>> separateLines(List<Rect>)
-- for each rect, get its vertical range
-- find vertical range in map that [[handwriting_recognizer_rangeutil][overlaps this range]]
-- range or combined range represents line depending on whether it was in map
-- sort chars in line at the end
- [{int[] spaceBetween(List<Rect>): returns {[0] = space between chars, [1] = between words}}]
- [{ImgDecomp buildDecomp(Map<Range,List<Rect>>, int[])}]